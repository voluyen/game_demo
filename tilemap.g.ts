// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "map-demo":
            case "level1":return tiles.createTilemap(hex`10001000060505050505050505050505050505050a00000007020102010102020105040404000000030010000000030703030604040000000d0f0e0000000309030307040400000000030303000003090307000404000003000310030300000003000004040003030003000000000303030000040407030300000003030703030300000c0407000010100000000303110010000b0401030303030010090303000000000b0402080300000003090703000003000c04020803000d0f0e07030000000300040401030300000d0f0e03000303030004040402030300000000000008080704040404040101070201020101020104040405050505050505050505050505050505`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . 2 . . . . . 2 2 2 2 2 2 
2 . . . 2 2 2 . . . 2 2 2 2 2 2 
2 . . . . 2 2 2 . . 2 2 2 2 . 2 
2 . . 2 . 2 . 2 2 . . . 2 . . 2 
2 . 2 2 . 2 . . . . 2 2 2 . . 2 
2 2 2 2 . . . 2 2 2 2 2 2 . . 2 
2 2 . . . . . . . 2 2 . . . . . 
2 2 2 2 2 2 . . 2 2 2 . . . . . 
2 2 2 2 . . . 2 2 2 2 . . 2 . 2 
2 2 2 2 . 2 2 2 2 2 . . . 2 . 2 
2 2 2 2 . . 2 2 2 2 . 2 2 2 . 2 
2 2 2 2 2 . . . . . . . . 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tileGrass1,sprites.builtin.forestTiles0,sprites.swamp.swampTile1,sprites.swamp.swampTile0,sprites.swamp.swampTile2,sprites.castle.saplingPine,sprites.castle.shrub,sprites.castle.rock0,sprites.castle.rock2,sprites.dungeon.stairLarge,sprites.dungeon.purpleOuterWest2,sprites.builtin.forestTiles1,sprites.builtin.forestTiles3,sprites.builtin.forestTiles2,myTiles.tile1,myTiles.tile2], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "tilemap1":
            case "tilemap1":return tiles.createTilemap(hex`19001900020303030303030303030303030303030303030303030303040a0110101010101010101010101010101010101010101011050b0f15151515151515151515151515151515151515151514050b0f15151515151515151515151515151515151515151514050a0f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090f1515151515151515151515151515151515151515151405090e1313131313131313131313131313131313131313131205080707070707070707070707070707070707070d0c0c0d0706`, img`
2222222222222222222222222
2.......................2
........................2
........................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
2.......................2
22222222222222222222..222
`, [myTiles.transparency16,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterNorth0,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.purpleOuterSouth0,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterWest1,sprites.dungeon.purpleOuterWest2,sprites.dungeon.stairWest,sprites.dungeon.stairSouth,sprites.dungeon.purpleOuterSouth2,sprites.dungeon.darkGroundSouthWest0,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundNorthEast0,sprites.dungeon.darkGroundSouthEast0,sprites.dungeon.darkGroundSouth,sprites.dungeon.darkGroundEast,sprites.dungeon.darkGroundCenter], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "weapon1":
            case "tile2":return tile2;
            case "trap":
            case "tile1":return tile1;
            case "dameTile1":
            case "tile3":return tile3;
            case "myTile":
            case "tile4":return tile4;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
